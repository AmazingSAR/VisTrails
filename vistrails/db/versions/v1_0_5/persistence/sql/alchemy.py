
from vistrails.core.bundles import py_import

sqlalchemy = py_import('sqlalchemy', 
                       {'pip': 'SQLAlchemy',
                        'linux-debian': 'python-sqlalchemy',
                        'linux-ubuntu': 'python-sqlalchemy',
                        'linux-fedora': 'python-sqlalchemy'})
import sqlalchemy.types

metadata = sqlalchemy.MetaData()
tables = {'vistrails_version': sqlalchemy.Table('vistrails_version', metadata,
                           sqlalchemy.Column('version', sqlalchemy.String(16))),
          'thumbnail': sqlalchemy.Table('thumbnail', metadata,
                           # autoincrement defaults to True
                           sqlalchemy.Column('id', sqlalchemy.Integer, primary_key=True),
                           sqlalchemy.Column('file_name', sqlalchemy.String(255)),
                           sqlalchemy.Column('image_bytes', sqlalchemy.LargeBinary(2 ** 24)),
                           sqlalchemy.Column('last_modified', sqlalchemy.DateTime())),
          'mashup_alias': sqlalchemy.Table('mashup_alias', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'group_tbl': sqlalchemy.Table('group_tbl', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('cache',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('namespace',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('package',
                                  sqlalchemy.types.VARCHAR(511),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'add_tbl': sqlalchemy.Table('add_tbl', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('what',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('object_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('par_obj_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('par_obj_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('action_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'group_exec': sqlalchemy.Table('group_exec', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('ts_start',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('ts_end',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('cached',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('module_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('group_name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('group_type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('completed',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('error',
                                  sqlalchemy.types.VARCHAR(1023),
                                  ),
                           sqlalchemy.Column('machine_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'parameter': sqlalchemy.Table('parameter', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('pos',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('val',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('alias',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'vistrail': sqlalchemy.Table('vistrail', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  autoincrement=True,
                                  primary_key=True,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('last_modified',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           ),
          'module': sqlalchemy.Table('module', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('cache',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('namespace',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('package',
                                  sqlalchemy.types.VARCHAR(511),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'port': sqlalchemy.Table('port', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('moduleId',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('moduleName',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('signature',
                                  sqlalchemy.types.VARCHAR(4095),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'pe_function': sqlalchemy.Table('pe_function', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('module_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('port_name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('is_alias',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'workflow': sqlalchemy.Table('workflow', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  autoincrement=True,
                                  primary_key=True,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('last_modified',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('vistrail_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           ),
          'mashup_action': sqlalchemy.Table('mashup_action', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('prev_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('date',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('user',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'change_tbl': sqlalchemy.Table('change_tbl', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('what',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('old_obj_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('new_obj_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('par_obj_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('par_obj_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('action_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'package': sqlalchemy.Table('package', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  autoincrement=True,
                                  primary_key=True,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('identifier',
                                  sqlalchemy.types.VARCHAR(1023),
                                  ),
                           sqlalchemy.Column('codepath',
                                  sqlalchemy.types.VARCHAR(1023),
                                  ),
                           sqlalchemy.Column('load_configuration',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('description',
                                  sqlalchemy.types.VARCHAR(1023),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'loop_exec': sqlalchemy.Table('loop_exec', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('ts_start',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('ts_end',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'connection_tbl': sqlalchemy.Table('connection_tbl', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'action': sqlalchemy.Table('action', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('prev_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('date',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('session',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('user',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'port_spec': sqlalchemy.Table('port_spec', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('optional',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('depth',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('ps_union',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('sort_key',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('min_conns',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('max_conns',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'log_tbl': sqlalchemy.Table('log_tbl', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  autoincrement=True,
                                  primary_key=True,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('last_modified',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('vistrail_id',
                                  sqlalchemy.types.INT,
                                  ),
                           ),
          'loop_iteration': sqlalchemy.Table('loop_iteration', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('ts_start',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('ts_end',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('iteration',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('completed',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('error',
                                  sqlalchemy.types.VARCHAR(1023),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'pe_parameter': sqlalchemy.Table('pe_parameter', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('pos',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('interpolator',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('dimension',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'workflow_exec': sqlalchemy.Table('workflow_exec', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('user',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('ip',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('session',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('vt_version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('ts_start',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('ts_end',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_version',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('completed',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('log_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'location': sqlalchemy.Table('location', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('x',
                                  sqlalchemy.types.DECIMAL(18,12),
                                  ),
                           sqlalchemy.Column('y',
                                  sqlalchemy.types.DECIMAL(18,12),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'function': sqlalchemy.Table('function', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('pos',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'action_annotation': sqlalchemy.Table('action_annotation', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('akey',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.VARCHAR(8191),
                                  ),
                           sqlalchemy.Column('action_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('date',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('user',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'control_parameter': sqlalchemy.Table('control_parameter', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'plugin_data': sqlalchemy.Table('plugin_data', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('data',
                                  sqlalchemy.types.VARCHAR(8191),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'delete_tbl': sqlalchemy.Table('delete_tbl', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('what',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('object_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('par_obj_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('par_obj_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('action_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'vistrail_variable': sqlalchemy.Table('vistrail_variable', metadata,
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('uuid',
                                  sqlalchemy.types.CHAR(36),
                                  ),
                           sqlalchemy.Column('package',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('module',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('namespace',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.VARCHAR(8191),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'module_descriptor': sqlalchemy.Table('module_descriptor', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('package',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('namespace',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('package_version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('base_descriptor_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'tag': sqlalchemy.Table('tag', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'port_spec_item': sqlalchemy.Table('port_spec_item', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('pos',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('module',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('package',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('namespace',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('label',
                                  sqlalchemy.types.VARCHAR(4095),
                                  ),
                           sqlalchemy.Column('_default',
                                  sqlalchemy.types.VARCHAR(4095),
                                  ),
                           sqlalchemy.Column('_values',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('entry_type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'mashup_component': sqlalchemy.Table('mashup_component', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('vtid',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('vttype',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('vtparent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('vtparent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('vtpos',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('vtmid',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('pos',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('val',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('minVal',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('maxVal',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('stepSize',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('strvaluelist',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('widget',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('seq',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('alias_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'mashup': sqlalchemy.Table('mashup', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('type',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('vtid',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('layout',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('geometry',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('has_seq',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'machine': sqlalchemy.Table('machine', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('os',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('architecture',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('processor',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('ram',
                                  sqlalchemy.types.BIGINT,
                                  ),
                           sqlalchemy.Column('vt_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('log_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'other': sqlalchemy.Table('other', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('okey',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'abstraction': sqlalchemy.Table('abstraction', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('cache',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('namespace',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('package',
                                  sqlalchemy.types.VARCHAR(511),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('internal_version',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'mashuptrail': sqlalchemy.Table('mashuptrail', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  autoincrement=True,
                                  primary_key=True,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.CHAR(36),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('vt_version',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('last_modified',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'registry': sqlalchemy.Table('registry', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  autoincrement=True,
                                  primary_key=True,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('version',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('root_descriptor_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('last_modified',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           ),
          'annotation': sqlalchemy.Table('annotation', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('akey',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.TEXT(2 ** 24),
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
          'parameter_exploration': sqlalchemy.Table('parameter_exploration', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('action_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('date',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('user',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('dims',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('layout',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'mashup_action_annotation': sqlalchemy.Table('mashup_action_annotation', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('akey',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('value',
                                  sqlalchemy.types.VARCHAR(8191),
                                  ),
                           sqlalchemy.Column('action_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('date',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('user',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           ),
          'module_exec': sqlalchemy.Table('module_exec', metadata,
                           sqlalchemy.Column('id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('ts_start',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('ts_end',
                                  sqlalchemy.types.DATETIME,
                                  ),
                           sqlalchemy.Column('cached',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('module_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('module_name',
                                  sqlalchemy.types.VARCHAR(255),
                                  ),
                           sqlalchemy.Column('completed',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('error',
                                  sqlalchemy.types.VARCHAR(1023),
                                  ),
                           sqlalchemy.Column('machine_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('parent_type',
                                  sqlalchemy.types.CHAR(32),
                                  ),
                           sqlalchemy.Column('entity_id',
                                  sqlalchemy.types.INT,
                                  ),
                           sqlalchemy.Column('entity_type',
                                  sqlalchemy.types.CHAR(16),
                                  ),
                           sqlalchemy.Column('parent_id',
                                  sqlalchemy.types.INT),
                           ),
         }
